<Window x:Class="CryptoTracker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CryptoTracker"
        xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
        xmlns:locator="clr-namespace:CryptoTracker.Model.Locator"
        xmlns:model="clr-namespace:CryptoTracker.Model" 
        xmlns:vm="clr-namespace:CryptoTracker.ViewModel" 
        xmlns:converter="clr-namespace:CryptoTracker.Converters"
        xmlns:command="clr-namespace:CryptoTracker.Commands"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="700" 
        Width="1000"
        Background="{DynamicResource BackgroundBrush}"
>
    <Window.Resources>
        <locator:ViewModelLocator x:Key="ViewModelLocator"/>
        <converter:NumberShortFormatConverter x:Key="NumberShortFormatConverter" />
        <converter:SymbolToImageUrlConverter x:Key="SymbolToImageUrlConverter" />
        <converter:BoolToParameterConverter x:Key="BoolToParameterConverter" />
        <command:SelectThameCommand x:Key="SelectThameCommand"/>
        <!--
        -->

        <!--
        <Style x:Key="TabButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,5"/>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid Name="Panel">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="{DynamicResource ActiveBrush }" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Panel" Property="Background" Value="{DynamicResource SecondaryBrush }" />
                            </Trigger>  
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="{DynamicResource HoverBrush }" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>  
         -->

        <!--
      

        <Style TargetType="{x:Type TabControl}" x:Key="Tab1">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Background="LightGray">
                                <ItemsPresenter Margin="2,0"/>
                            </StackPanel>
                            <ContentPresenter Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        -->

        <Style TargetType="TabControl">
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
        </Style>
        <Style TargetType="Grid">
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        </Style>

    </Window.Resources>
    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TabControl SelectedIndex="{Binding Path=TabIndex}" 
                    Grid.RowSpan="2"
                    Margin="5">
            <TabItem Header="Rating coins">
                <Grid>
                    <DataGrid ItemsSource="{Binding  MarketCap.CryptoCrrencies}" 
                              SelectedItem="{Binding SelectedCoin}"
                              SelectionMode="Single"
                              IsReadOnly="True"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeRows="False"
                              CanUserResizeColumns="False"
                              ColumnWidth="auto">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Rank"
                                                Binding="{Binding Rank}" 
                                                Width="60">
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="Grid">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn Header="Name" Width="Auto" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Height="30" Width="30" 
                                                   Source="{Binding Symbol, Converter={StaticResource SymbolToImageUrlConverter}}">
                                            </Image>
                                            <TextBlock Text="{Binding Name}" 
                                                       Width="150" />
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Price" 
                                                Binding="{Binding PriceUsd, StringFormat={}{0:C}}"/>
                            <DataGridTextColumn Header="Market Cap" 
                                                Binding="{Binding MarketCapUsd, StringFormat=${0}, Converter={StaticResource NumberShortFormatConverter}}" />
                            <DataGridTextColumn Header="VWAP (24Hr)"
                                                Binding="{Binding VWAP24Hr, StringFormat={}{0:C}}"/>
                            <DataGridTextColumn Header="Supply" 
                                                Binding="{Binding Supply, Converter={StaticResource NumberShortFormatConverter}}"/>
                            <DataGridTextColumn Header="Volume (24Hr)" 
                                                Binding="{Binding VolumeUsd24Hr, StringFormat=${0}, Converter={StaticResource NumberShortFormatConverter}}" />
                            <DataGridTextColumn Header="Change (24Hr)" 
                                                Binding="{Binding ChangePercent24Hr, StringFormat={}{0:0.00}%}"
                                                Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Converter" >
                <Grid HorizontalAlignment="Center"
                      VerticalAlignment="Center" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.DataContext>
                        <vm:ConverterViewModel/>
                    </Grid.DataContext>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="300"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="300"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1"
                            VerticalAlignment="Center" >
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="↔"/>
                        </StackPanel>
                    </Button>
                    <StackPanel Orientation="Vertical"
                                Grid.Column="0">
                        <ComboBox ItemsSource="{Binding MarketCap.CryptoCrrencies}"
                                  SelectedItem="{Binding ConvertFrom}"
                                  HorizontalContentAlignment="Stretch"
                                  SelectedIndex="0">
                        </ComboBox>
                        <TextBox Height="50" 
                            Text="{Binding LeftNumber, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" 
                                Grid.Column="2" >
                        <ComboBox ItemsSource="{Binding MarketCap.CryptoCrrencies}"
                                  SelectedItem="{Binding ConvertTo}"
                                  SelectedIndex="1"
                                  HorizontalContentAlignment="Stretch">
                        </ComboBox>
                        <TextBox Height="50" 
                                 Text="{Binding RightNumber, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <TextBlock Grid.Row="1" 
                               Grid.ColumnSpan="3"
                               TextAlignment="Center">
                        <Run Text="1" />
                        <Run Text="{Binding ConvertFrom.Name}" />
                        <Run Text=" = " />
                        <Run Text="{Binding Amount}" />
                        <Run Text=" " />
                        <Run Text="{Binding ConvertTo.Name}" />
                    </TextBlock>
                </Grid>
            </TabItem>

            <TabItem Header="Trade">
                <TabItem.DataContext>
                    <Binding Source="{StaticResource ViewModelLocator}" Path="ChartViewModel" />
                </TabItem.DataContext>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="50"/>
                        <!--
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        -->
                    </Grid.RowDefinitions>
                    <Grid Margin="5" 
                          Width="450"
                          HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Interval"
                                   Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                        <RadioButton Grid.Column="1"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartInterval}"
                 CommandParameter="{x:Static vm:Interval.m1}"
                 IsChecked="True"
                 Content="1m" />
                        <RadioButton Grid.Column="2"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartInterval}"
                 CommandParameter="{x:Static vm:Interval.m5}"
                 Content="5m" />
                        <RadioButton Grid.Column="3"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartInterval}"
                 CommandParameter="{x:Static vm:Interval.m15}"
                 Content="15m" />
                        <RadioButton Grid.Column="4"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartInterval}"
                 CommandParameter="{x:Static vm:Interval.h1}"
                 Content="1h" />
                        <RadioButton Grid.Column="5"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartInterval}"
                 CommandParameter="{x:Static vm:Interval.h2}"
                 Content="2h" />
                        <RadioButton Grid.Column="6"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartInterval}"
                 CommandParameter="{x:Static vm:Interval.h6}"
                 Content="6h" />
                        <RadioButton Grid.Column="7"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartInterval}"
                 CommandParameter="{x:Static vm:Interval.h12}"
                 Content="12h" />
                        <RadioButton Grid.Column="8"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartInterval}"
                 CommandParameter="{x:Static vm:Interval.d1}"
                 Content="1d" />
                    </Grid>
                    <StackPanel Orientation="Horizontal">
                        <Image Height="30" Width="30" 
                               Source="{Binding SelectedCoin.Symbol, Converter={StaticResource SymbolToImageUrlConverter}}">
                        </Image>
                        <TextBlock Text="{Binding SelectedCoin.Name}"/>
                        <TextBlock Text="{Binding SelectedCoin.Symbol}"/>
                    </StackPanel>
                    <Grid Grid.Row="2" Width="450" 
                          Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="Scale" 
                                   Foreground="{DynamicResource PrimaryForegroundBrush}"/>

                        <RadioButton Grid.Column="1"
                                     Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartScale}"
                 CommandParameter="{x:Static model:Scale.H1}"
                 IsChecked="True"
                 Content="1h" />
                        <RadioButton Grid.Column="2"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartScale}"
                 CommandParameter="{x:Static model:Scale.H6}"
                 Content="6h" />
                        <RadioButton Grid.Column="3"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartScale}"
                 CommandParameter="{x:Static model:Scale.D1}"
                 Content="1D" />
                        <RadioButton Grid.Column="4"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartScale}"
                 CommandParameter="{x:Static model:Scale.D7}"
                 Content="7D" />
                        <RadioButton Grid.Column="5"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartScale}"
                 CommandParameter="{x:Static model:Scale.M1}"
                 Content="1m" />
                        <RadioButton Grid.Column="6"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartScale}"
                 CommandParameter="{x:Static model:Scale.M6}"
                 Content="6m" />
                        <RadioButton Grid.Column="7"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartScale}"
                 CommandParameter="{x:Static model:Scale.M12}"
                 Content="12m" />
                        <RadioButton Grid.Column="8"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartScale}"
                 CommandParameter="{x:Static model:Scale.Max}"
                 Content="1y" />
                        <RadioButton Grid.Column="9"
                 Style="{StaticResource {x:Type ToggleButton}}"
                 Command="{Binding SelectChartScale}"
                 CommandParameter="{x:Static model:Scale.Max}"
                 Content="max" />
                    </Grid>
                    <lvc:CartesianChart
                        Grid.Row="1"

                        Series="{Binding Series }"
                        XAxes="{Binding SharedXAxis}"
                        ZoomMode="X" AnimationsSpeed="00:00:0.1000000">
                    </lvc:CartesianChart>

                </Grid>
            </TabItem>
        </TabControl>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Margin="5">
            <!-- 
            -->
            <ToggleButton Width="30" 
                          Height="30"
                          IsChecked="True"
                          Command="{StaticResource SelectThameCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={StaticResource BoolToParameterConverter}}">
                <ToggleButton.Template >
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Ellipse x:Name="Elipse" 
                                     StrokeThickness="0"  />
                            <Viewbox x:Name="Viewbox"
                                Height="30"
                                Width="30"
                                Margin="-10,-8,0,0">
                                <ContentControl x:Name="ContentControl"  />
                            </Viewbox>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ContentControl" Property="Content">
                                    <Setter.Value>
                                        <Viewbox>
                                            <ContentControl Content="{DynamicResource MoonIcon}" />
                                        </Viewbox>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Viewbox" Property="Margin" Value="-2.5,-2,0,0"/>
                                <Setter TargetName="Viewbox" Property="Height" Value="25"/>
                                <Setter TargetName="Viewbox" Property="Width" Value="25"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="ContentControl" Property="Content">
                                    <Setter.Value>
                                        <Viewbox>
                                            <ContentControl Content="{DynamicResource SunIcon}" />
                                        </Viewbox>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Viewbox" Property="Margin" Value="-2.5,-2,0,0"/>
                                <Setter TargetName="Viewbox" Property="Height" Value="25"/>
                                <Setter TargetName="Viewbox" Property="Width" Value="25"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Elipse" Value="{DynamicResource ForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="Elipse" Value="{DynamicResource SecondaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </ToggleButton.Template>
            </ToggleButton>

        </StackPanel>
    </Grid>
</Window>
